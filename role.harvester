
var roleHarvester = {

    /** @param {Creep} creep **/
    run: function(creep) {
        if(creep.memory.working && creep.carry.energy == 0) {
            creep.memory.working = false;
            creep.say('🔄 harvest');
	    }
	    if(!creep.memory.working && creep.carry.energy == creep.carryCapacity) {
	        creep.memory.working = true;
	        creep.say('♻️transfer');
	    }

	   
	    if(!creep.memory.working) {
            
            
            if(creep.harvest(creep.memory.source) == ERR_NOT_IN_RANGE) {
                if(creep.moveTo(creep.memory.source) != ERR_NO_PATH){
                    creep.moveTo(creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}});
                 }
            }
            
        
	    }
        else {
            if(creep.memory.target!=null){
                if(creep.transfer(creep.memory.target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(creep.memory.target,  {visualizePathStyle: {stroke: '#ffffff'}});
                }
            }
            else{
                creep.memory.target =creep.pos.findClosestByPath(FIND_STRUCTURES, {
                filter: (structure) => {
                    return ((structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) 
                    &&structure.energy < structure.energyCapacity);
                }})
            }
            
        }

        
	}
};

module.exports = roleHarvester;
